# app/services/password_reset_service.py

import asyncpg
from typing import Optional, Dict, Any
from fastapi import HTTPException, status

from app.repositories.password_reset_repo import PasswordResetRepository
from app.repositories.usuario_repo import UsuarioRepository
from app.services.email_service import EmailService
from app.core.security import get_password_hash
from app.core.config import settings


class PasswordResetService:
    """Service para gerenciar o fluxo de reset de senha"""

    def __init__(self, connection: asyncpg.Connection):
        self.conn = connection
        self.reset_repo = PasswordResetRepository(connection)
        self.user_repo = UsuarioRepository(connection)

    async def request_password_reset(self, email: str) -> Dict[str, Any]:
        """
        Processa solicita√ß√£o de reset de senha

        Args:
            email: Email do usu√°rio

        Returns:
            Dict com resultado da opera√ß√£o
        """
        # Busca usu√°rio pelo email
        user = await self.user_repo.get_user_by_email(email)

        if not user:
            # Por seguran√ßa, n√£o revelamos que o email n√£o existe
            # Mas registramos a tentativa para auditoria
            print(f"‚ö†Ô∏è Tentativa de reset para email n√£o cadastrado: {email}")
            return {
                "success": True,
                "message": "Solicita√ß√£o enviada! Instru√ß√µes para recuperar sua senha foram registradas."
            }

        if not user.get('ativo', True):
            # Usu√°rio inativo tamb√©m n√£o deve receber reset
            print(f"‚ö†Ô∏è Tentativa de reset para usu√°rio inativo: {email}")
            return {
                "success": True,
                "message": "Solicita√ß√£o enviada! Instru√ß√µes para recuperar sua senha foram registradas."
            }

        # Gera token de reset
        token = await self.reset_repo.create_reset_token(user['id'])

        # Envia email de reset
        email_sent = await self._send_reset_email(user, token)

        if not email_sent:
            raise HTTPException(
                status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
                detail="Erro interno. Tente novamente mais tarde."
            )

        return {
            "success": True,
            "message": "Solicita√ß√£o enviada! Instru√ß√µes para recuperar sua senha foram registradas."
        }

    async def validate_reset_token(self, token: str) -> Dict[str, Any]:
        """
        Valida token de reset de senha

        Args:
            token: Token a ser validado

        Returns:
            Dict com resultado da valida√ß√£o
        """
        token_info = await self.reset_repo.validate_token(token)

        if not token_info:
            return {
                "valid": False,
                "message": "Token inv√°lido, expirado ou j√° utilizado."
            }

        return {
            "valid": True,
            "message": "Token v√°lido",
            "user_email": token_info['email']
        }

    async def reset_password(self, token: str, new_password: str) -> Dict[str, Any]:
        """
        Efetua o reset da senha usando o token

        Args:
            token: Token de reset
            new_password: Nova senha

        Returns:
            Dict com resultado da opera√ß√£o
        """
        # Valida token
        token_info = await self.reset_repo.validate_token(token)

        if not token_info:
            raise HTTPException(
                status_code=status.HTTP_400_BAD_REQUEST,
                detail="Token inv√°lido, expirado ou j√° utilizado."
            )

        # Hash da nova senha
        password_hash = get_password_hash(new_password)

        # Atualiza senha do usu√°rio
        success = await self.user_repo.update_user_password_hash(
            token_info['usuario_id'],
            password_hash
        )

        if not success:
            raise HTTPException(
                status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
                detail="Erro ao atualizar senha. Tente novamente."
            )

        # Marca token como usado
        await self.reset_repo.mark_token_as_used(token)

        # Envia email de confirma√ß√£o
        await self._send_password_changed_email(token_info)

        return {
            "success": True,
            "message": "Senha alterada com sucesso!"
        }

    async def _send_reset_email(self, user: Dict[str, Any], token: str) -> bool:
        """
        Envia email com link para reset de senha

        Args:
            user: Dados do usu√°rio
            token: Token de reset

        Returns:
            bool: True se email foi enviado
        """
        # Constr√≥i URL de reset (assumindo que o frontend ir√° lidar com isso)
        reset_url = f"{settings.FRONTEND_URL}/reset-password?token={token}" if hasattr(settings, 'FRONTEND_URL') else f"https://sigescon.pge.pa.gov.br/reset-password?token={token}"

        subject = "üîí Solicita√ß√£o de Reset de Senha - SIGESCON"

        # Email HTML com link clic√°vel
        body = f"""
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset de Senha - SIGESCON</title>
    <style>
        body {{
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f8f9fa;
        }}
        .container {{
            background-color: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }}
        .header {{
            text-align: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #e9ecef;
        }}
        .logo {{
            font-size: 24px;
            font-weight: bold;
            color: #495057;
            margin-bottom: 10px;
        }}
        .subtitle {{
            color: #6c757d;
            font-size: 14px;
        }}
        .greeting {{
            font-size: 18px;
            margin-bottom: 20px;
            color: #495057;
        }}
        .reset-button {{
            display: inline-block;
            background-color: #007bff;
            color: white !important;
            padding: 15px 30px;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            margin: 20px 0;
            font-size: 16px;
            text-align: center;
        }}
        .reset-button:hover {{
            background-color: #0056b3;
        }}
        .button-container {{
            text-align: center;
            margin: 30px 0;
        }}
        .warning {{
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 5px;
            padding: 15px;
            margin: 20px 0;
        }}
        .warning-title {{
            font-weight: bold;
            color: #856404;
            margin-bottom: 10px;
        }}
        .warning-item {{
            margin: 8px 0;
            color: #856404;
        }}
        .security-tips {{
            background-color: #d1ecf1;
            border: 1px solid #bee5eb;
            border-radius: 5px;
            padding: 15px;
            margin: 20px 0;
        }}
        .security-title {{
            font-weight: bold;
            color: #0c5460;
            margin-bottom: 10px;
        }}
        .security-item {{
            margin: 8px 0;
            color: #0c5460;
        }}
        .footer {{
            border-top: 2px solid #e9ecef;
            padding-top: 20px;
            margin-top: 30px;
            text-align: center;
            color: #6c757d;
            font-size: 12px;
        }}
        .url-fallback {{
            font-size: 12px;
            color: #6c757d;
            word-break: break-all;
            margin-top: 10px;
        }}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo">üîí SIGESCON</div>
            <div class="subtitle">Sistema de Gest√£o de Contratos</div>
        </div>

        <div class="greeting">
            Ol√° <strong>{user['nome']}</strong>,
        </div>

        <p>Voc√™ solicitou a altera√ß√£o de sua senha no Sistema de Gest√£o de Contratos (SIGESCON).</p>

        <div class="button-container">
            <a href="{reset_url}" class="reset-button">
                üîó Criar Nova Senha
            </a>
        </div>

        <p class="url-fallback">
            Se o bot√£o n√£o funcionar, copie e cole este link no seu navegador:<br>
            <strong>{reset_url}</strong>
        </p>

        <div class="warning">
            <div class="warning-title">‚ö†Ô∏è IMPORTANTE:</div>
            <div class="warning-item">‚Ä¢ Este link √© v√°lido por <strong>24 horas</strong></div>
            <div class="warning-item">‚Ä¢ Por seguran√ßa, use o link apenas <strong>uma vez</strong></div>
            <div class="warning-item">‚Ä¢ Se voc√™ n√£o solicitou esta altera√ß√£o, <strong>ignore este email</strong></div>
        </div>

        <div class="security-tips">
            <div class="security-title">üõ°Ô∏è Para sua seguran√ßa:</div>
            <div class="security-item">‚Ä¢ Crie uma senha forte com pelo menos 6 caracteres</div>
            <div class="security-item">‚Ä¢ N√£o compartilhe sua senha com ningu√©m</div>
            <div class="security-item">‚Ä¢ Fa√ßa logout ao usar computadores compartilhados</div>
        </div>

        <p>Em caso de d√∫vidas, entre em contato com o administrador do sistema.</p>

        <div class="footer">
            <strong>Sistema de Gest√£o de Contratos - SIGESCON</strong><br>
            Este √© um email autom√°tico, n√£o responda.
        </div>
    </div>
</body>
</html>
        """

        return await EmailService.send_email(user['email'], subject, body, is_html=True)

    async def _send_password_changed_email(self, token_info: Dict[str, Any]) -> bool:
        """
        Envia email de confirma√ß√£o ap√≥s altera√ß√£o de senha

        Args:
            token_info: Informa√ß√µes do token usado

        Returns:
            bool: True se email foi enviado
        """
        subject = "‚úÖ Senha Alterada com Sucesso - SIGESCON"

        # Email HTML de confirma√ß√£o
        body = f"""
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Senha Alterada - SIGESCON</title>
    <style>
        body {{
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f8f9fa;
        }}
        .container {{
            background-color: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }}
        .header {{
            text-align: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #e9ecef;
        }}
        .logo {{
            font-size: 24px;
            font-weight: bold;
            color: #495057;
            margin-bottom: 10px;
        }}
        .subtitle {{
            color: #6c757d;
            font-size: 14px;
        }}
        .success-badge {{
            background-color: #d4edda;
            border: 1px solid #c3e6cb;
            border-radius: 5px;
            padding: 20px;
            margin: 20px 0;
            text-align: center;
        }}
        .success-title {{
            font-size: 20px;
            font-weight: bold;
            color: #155724;
            margin-bottom: 10px;
        }}
        .info-box {{
            background-color: #d1ecf1;
            border: 1px solid #bee5eb;
            border-radius: 5px;
            padding: 15px;
            margin: 20px 0;
        }}
        .info-item {{
            margin: 8px 0;
            color: #0c5460;
        }}
        .alert-box {{
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            border-radius: 5px;
            padding: 15px;
            margin: 20px 0;
        }}
        .alert-text {{
            color: #721c24;
            font-weight: bold;
        }}
        .security-tips {{
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 5px;
            padding: 15px;
            margin: 20px 0;
        }}
        .security-title {{
            font-weight: bold;
            color: #856404;
            margin-bottom: 10px;
        }}
        .security-item {{
            margin: 8px 0;
            color: #856404;
        }}
        .footer {{
            border-top: 2px solid #e9ecef;
            padding-top: 20px;
            margin-top: 30px;
            text-align: center;
            color: #6c757d;
            font-size: 12px;
        }}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo">‚úÖ SIGESCON</div>
            <div class="subtitle">Sistema de Gest√£o de Contratos</div>
        </div>

        <div class="success-badge">
            <div class="success-title">üéâ Senha Alterada com Sucesso!</div>
            <p>Ol√° <strong>{token_info['nome']}</strong>, sua senha foi alterada com sucesso.</p>
        </div>

        <div class="info-box">
            <div class="info-item"><strong>‚è∞ Altera√ß√£o realizada em:</strong> {token_info.get('used_at', 'agora')}</div>
            <div class="info-item"><strong>üìß Email da conta:</strong> {token_info['email']}</div>
        </div>

        <div class="alert-box">
            <div class="alert-text">
                üö® Se voc√™ n√£o realizou esta altera√ß√£o, entre em contato IMEDIATAMENTE com o administrador do sistema.
            </div>
        </div>

        <div class="security-tips">
            <div class="security-title">üõ°Ô∏è Para sua seguran√ßa:</div>
            <div class="security-item">‚Ä¢ Fa√ßa login com sua nova senha</div>
            <div class="security-item">‚Ä¢ Verifique se n√£o h√° sess√µes ativas indevidas</div>
            <div class="security-item">‚Ä¢ Mantenha suas credenciais sempre seguras</div>
        </div>

        <div class="footer">
            <strong>Sistema de Gest√£o de Contratos - SIGESCON</strong><br>
            Este √© um email autom√°tico, n√£o responda.
        </div>
    </div>
</body>
</html>
        """

        return await EmailService.send_email(token_info['email'], subject, body, is_html=True)