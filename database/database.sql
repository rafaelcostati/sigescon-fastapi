-- DB/database.sql
-- Script unificado para criação do banco de dados SIGESCON

-- =====================================================
-- PARTE 1: CRIAÇÃO DAS TABELAS
-- =====================================================

-- Tabela de Perfis de Usuário
CREATE TABLE IF NOT EXISTS "perfil" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nome" varchar(50) UNIQUE NOT NULL,
  "ativo" BOOLEAN NOT NULL DEFAULT TRUE
);

-- Tabela de Usuários
CREATE TABLE IF NOT EXISTS "usuario" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nome" varchar(255) NOT NULL,
  "email" varchar(255) NOT NULL,
  "cpf" varchar(11) NOT NULL,
  "matricula" varchar(20),
  "senha" varchar(255) NOT NULL,
  "perfil_id" int NOT NULL,
  "ativo" boolean NOT NULL DEFAULT true,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now()),
  FOREIGN KEY ("perfil_id") REFERENCES "perfil" ("id")
);

-- Tabela de Contratados
CREATE TABLE IF NOT EXISTS "contratado" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nome" varchar(255) NOT NULL,
  "cnpj" varchar(14),
  "cpf" varchar(11),
  "telefone" varchar(20),
  "email" varchar(255) NOT NULL,
  "ativo" boolean NOT NULL DEFAULT true,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

-- Tabela de Modalidades de Contrato
CREATE TABLE IF NOT EXISTS "modalidade" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nome" varchar(100) NOT NULL,
  "ativo" BOOLEAN NOT NULL DEFAULT TRUE
);

-- Tabela de Status Gerais (para contratos)
CREATE TABLE IF NOT EXISTS "status" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nome" varchar(50) NOT NULL,
  "ativo" BOOLEAN NOT NULL DEFAULT TRUE
);

-- Tabela de Contratos
CREATE TABLE IF NOT EXISTS "contrato" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nr_contrato" varchar(50) NOT NULL,
  "objeto" text NOT NULL,
  "valor_anual" decimal(15,2),
  "valor_global" decimal(15,2),
  "base_legal" varchar(255),
  "data_inicio" date NOT NULL,
  "data_fim" date NOT NULL,
  "termos_contratuais" text,
  "contratado_id" int NOT NULL,
  "modalidade_id" int NOT NULL,
  "status_id" int NOT NULL DEFAULT 1,
  "gestor_id" int NOT NULL,
  "fiscal_id" int NOT NULL,
  "fiscal_substituto_id" int,
  "pae" varchar(50),
  "doe" varchar(50),
  "data_doe" date,
  "documento" integer,
  "ativo" boolean NOT NULL DEFAULT true,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now()),
  FOREIGN KEY ("contratado_id") REFERENCES "contratado" ("id"),
  FOREIGN KEY ("modalidade_id") REFERENCES "modalidade" ("id"),
  FOREIGN KEY ("status_id") REFERENCES "status" ("id"),
  FOREIGN KEY ("gestor_id") REFERENCES "usuario" ("id"),
  FOREIGN KEY ("fiscal_id") REFERENCES "usuario" ("id"),
  FOREIGN KEY ("fiscal_substituto_id") REFERENCES "usuario" ("id")
);

-- Tabela de Arquivos
CREATE TABLE IF NOT EXISTS "arquivo" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nome_arquivo" varchar(255) NOT NULL,
  "path_armazenamento" varchar(500) NOT NULL,
  "tipo_arquivo" TEXT,
  "tamanho_bytes" int,
  "contrato_id" int NOT NULL,
  "created_at" timestamp DEFAULT (now()),
  FOREIGN KEY ("contrato_id") REFERENCES "contrato" ("id")
);

-- Tabela de Status das Pendências
CREATE TABLE IF NOT EXISTS "statuspendencia" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nome" varchar(50) NOT NULL,
  "ativo" BOOLEAN NOT NULL DEFAULT TRUE
);

-- Tabela de Pendências de Relatórios
CREATE TABLE IF NOT EXISTS "pendenciarelatorio" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "contrato_id" int NOT NULL,
  "descricao" text NOT NULL,
  "data_prazo" date NOT NULL,
  "status_pendencia_id" int NOT NULL,
  "criado_por_usuario_id" int NOT NULL,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now()),
  FOREIGN KEY ("contrato_id") REFERENCES "contrato" ("id"),
  FOREIGN KEY ("status_pendencia_id") REFERENCES "statuspendencia" ("id"),
  FOREIGN KEY ("criado_por_usuario_id") REFERENCES "usuario" ("id")
);

-- Tabela de Status dos Relatórios
CREATE TABLE IF NOT EXISTS "statusrelatorio" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "nome" varchar(50) NOT NULL,
  "ativo" BOOLEAN NOT NULL DEFAULT TRUE
);

-- Tabela de Relatórios Fiscais
CREATE TABLE IF NOT EXISTS "relatoriofiscal" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "contrato_id" int NOT NULL,
  "fiscal_usuario_id" int NOT NULL,
  "arquivo_id" int,
  "status_id" int NOT NULL,
  "mes_competencia" date NOT NULL,
  "observacoes_fiscal" text,
  "aprovador_usuario_id" int,
  "data_analise" timestamp,
  "observacoes_aprovador" text,
  "pendencia_id" int,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now()),
  FOREIGN KEY ("contrato_id") REFERENCES "contrato" ("id"),
  FOREIGN KEY ("fiscal_usuario_id") REFERENCES "usuario" ("id"),
  FOREIGN KEY ("aprovador_usuario_id") REFERENCES "usuario" ("id"),
  FOREIGN KEY ("arquivo_id") REFERENCES "arquivo" ("id"),
  FOREIGN KEY ("status_id") REFERENCES "statusrelatorio" ("id"),
  FOREIGN KEY ("pendencia_id") REFERENCES "pendenciarelatorio" ("id")
);

-- =====================================================
-- PARTE 2: ÍNDICES ÚNICOS PARA SOFT DELETE
-- =====================================================

-- Índices únicos condicionais (apenas para registros ativos)
CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_modalidade_nome_ativo 
  ON modalidade (nome) WHERE ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_status_nome_ativo 
  ON status (nome) WHERE ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_perfil_nome_ativo 
  ON perfil (nome) WHERE ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_statuspendencia_nome_ativo 
  ON statuspendencia (nome) WHERE ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_statusrelatorio_nome_ativo 
  ON statusrelatorio (nome) WHERE ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_contratado_cnpj_ativo 
  ON contratado (cnpj) WHERE cnpj IS NOT NULL AND ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_contratado_cpf_ativo 
  ON contratado (cpf) WHERE cpf IS NOT NULL AND ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_contratado_email_ativo 
  ON contratado (email) WHERE ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_usuario_email_ativo 
  ON usuario (email) WHERE ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_usuario_cpf_ativo 
  ON usuario (cpf) WHERE ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_usuario_matricula_ativo 
  ON usuario (matricula) WHERE matricula IS NOT NULL AND ativo IS TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS idx_unique_contrato_nr_contrato_ativo 
  ON contrato (nr_contrato) WHERE ativo IS TRUE;

-- =====================================================
-- PARTE 3: ÍNDICES DE PERFORMANCE
-- =====================================================

-- Índices para melhorar performance de consultas frequentes
CREATE INDEX IF NOT EXISTS idx_contrato_data_fim ON contrato(data_fim);
CREATE INDEX IF NOT EXISTS idx_contrato_status_id ON contrato(status_id) WHERE ativo = TRUE;
CREATE INDEX IF NOT EXISTS idx_contrato_fiscal_id ON contrato(fiscal_id) WHERE ativo = TRUE;
CREATE INDEX IF NOT EXISTS idx_contrato_gestor_id ON contrato(gestor_id) WHERE ativo = TRUE;
CREATE INDEX IF NOT EXISTS idx_relatoriofiscal_contrato_id ON relatoriofiscal(contrato_id);
CREATE INDEX IF NOT EXISTS idx_pendenciarelatorio_contrato_id ON pendenciarelatorio(contrato_id);
CREATE INDEX IF NOT EXISTS idx_pendenciarelatorio_data_prazo ON pendenciarelatorio(data_prazo);

-- =====================================================
-- PARTE 4: COMENTÁRIOS DE DOCUMENTAÇÃO
-- =====================================================

COMMENT ON TABLE "contrato" IS 'Tabela principal de contratos do sistema';
COMMENT ON TABLE "usuario" IS 'Usuários do sistema com diferentes perfis de acesso';
COMMENT ON TABLE "contratado" IS 'Empresas ou pessoas contratadas';
COMMENT ON TABLE "relatoriofiscal" IS 'Relatórios de fiscalização submetidos pelos fiscais';
COMMENT ON TABLE "pendenciarelatorio" IS 'Pendências criadas pelos administradores para os fiscais';

COMMENT ON COLUMN "relatoriofiscal"."contrato_id" IS 'Qual contrato este relatório pertence';
COMMENT ON COLUMN "relatoriofiscal"."fiscal_usuario_id" IS 'Qual fiscal submeteu o relatório';
COMMENT ON COLUMN "relatoriofiscal"."arquivo_id" IS 'O ID do arquivo que foi efetivamente enviado';
COMMENT ON COLUMN "relatoriofiscal"."status_id" IS 'O status atual do relatório (Pendente, Aprovado, etc.)';
COMMENT ON COLUMN "relatoriofiscal"."mes_competencia" IS 'Mês/Ano a que o relatório se refere. Ex: 2025-07-01 para Jul/2025';
COMMENT ON COLUMN "relatoriofiscal"."observacoes_fiscal" IS 'Comentários que o fiscal pode adicionar na submissão';
COMMENT ON COLUMN "relatoriofiscal"."aprovador_usuario_id" IS 'Qual administrador analisou o relatório. Preenchido na aprovação/rejeição';
COMMENT ON COLUMN "relatoriofiscal"."data_analise" IS 'Quando o relatório foi analisado';
COMMENT ON COLUMN "relatoriofiscal"."observacoes_aprovador" IS 'Feedback do administrador, obrigatório em caso de rejeição';
COMMENT ON COLUMN "relatoriofiscal"."pendencia_id" IS 'Se este relatório responde a uma pendência específica';

COMMENT ON COLUMN "pendenciarelatorio"."contrato_id" IS 'A qual contrato esta pendência se refere';
COMMENT ON COLUMN "pendenciarelatorio"."descricao" IS 'Descrição da pendência criada pelo Administrador';
COMMENT ON COLUMN "pendenciarelatorio"."data_prazo" IS 'Data limite para o envio do relatório';
COMMENT ON COLUMN "pendenciarelatorio"."status_pendencia_id" IS 'Status da pendência (Pendente, Concluída)';
COMMENT ON COLUMN "pendenciarelatorio"."criado_por_usuario_id" IS 'Qual Administrador criou a pendência';

COMMENT ON COLUMN "usuario"."senha" IS 'Deve ser armazenada como hash bcrypt';
COMMENT ON COLUMN "perfil"."nome" IS 'Ex: Administrador, Gestor, Fiscal';
COMMENT ON COLUMN "status"."nome" IS 'Ex: Vigente, Encerrado, Rescindido, Apostilado';
COMMENT ON COLUMN "statusrelatorio"."nome" IS 'Ex: Pendente de Análise, Aprovado, Rejeitado com Pendência';
COMMENT ON COLUMN "statuspendencia"."nome" IS 'Ex: Pendente, Concluída, Cancelada';
COMMENT ON COLUMN "arquivo"."contrato_id" IS 'Referência geral ao contrato principal para facilitar buscas';

-- =====================================================
-- FIM DO SCRIPT
-- =====================================================